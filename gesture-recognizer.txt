• What does the recognizer do?
The $P recognizer considers gestures as point clouds and performs on unistrokes similarly to $1 recognizer and is also superior to $N recognizer on multistrokes (Vatavu et al., 2012, p. 273). So, the $P recognizer does not have issues with memory and execution costs like the $N recognizer (Vatavu et al., 2012, p. 273). The $P recognizer avoids storage complexity, because it represents gestures as cloud points and this ignores different user behavior in terms of stroke direction an order (Vatavu et al., 2012, p. 274). It has high accuracy, low barriers to adoption and low complexity (Vatavu et al., 2012, p. 274). With the $P recognizer the gesture execution timeline can be discarded. The Number of strokes, the order of strokes and their direction become irrelevant (Vatavu et al., 2012, p. 275). The only task of the $P recognizer lies in matching the point cloud of the candidate gesture to the point cloud of each template in the training set and in the computation of a matching distance (Vatavu et al., 2012, p. 274). The Nearest-Neighbor approach the template which is located at the smallest distance from the candidate gesture delivers the classification result (Vatavu et al., 2012, p. 274). The matching between two point clouds, the candidate gesture and template, is defined as a function which associates every point of the candidate gesture with exactly on point of the template (Vatavu et al., 2012, p. 274). If you recognize the point clouds you don't have the order of the lines that were made and so it is possible to match different orders and numbers of lines to one gesture.
• Name an advantage of the $P recognizer over the $1 recognizer.
With the $1 recognizer the stroke direction is very important. For example, if a square is drawn clockwise is it classified differently as a square which is not drawn clockwise (Vatavu et al., 2012, p. 273). The $P recognizer considers both squares as point clouds where stroke direction is irrelevant and classifies both squares the same (Vatavu et al., 2012, p. 274). The time-free alignment of point clouds with the $P is also an advantage. $1 has a time- ordered alignment that fails if the gesture is drawn backwards, for example if it is a spiral. 



• What is the minimum matching distance?
It is the goodness of matching the points of a function, which matches two point clouds (the candidate gesture and the template) and matches the distances for all pairs of points from this function and searches for the minimum matching distance between the candidate gesture and the template from all n! possible alignments (Vatavu et al., 2012, p. 274-275). It represents the problem in combinatorial optimization which is known as the Assignment Problem which has been solved in graph theory (Vatavu et al., 2012, p. 275). The matching problem is transmitted into formalism of graphs when an undirected graph with 2n vertexes which corresponds to the points of the candidate gestures and the template and edges weighted by the Euclidean distances between the points is constructed (Vatavu et al., 2012, p. 275). 


Vatavu, R.-D., Anthony, L., & Wobbrock, J. O. (2012). Gestures as point clouds: A $P recognizer for user interface prototypes. Proceedings of the 14th ACM International Conference on Multimodal Interaction, 273–280. https://doi.org/10.1145/2388676.2388732

